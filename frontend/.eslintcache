[{"/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/index.js":"1","/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/App.js":"2","/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/reportWebVitals.js":"3","/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/views/authentication/Signup.jsx":"4","/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/views/authentication/Login.jsx":"5","/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/views/authentication/PasswordReset.jsx":"6","/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/views/Home.jsx":"7","/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/views/PersonelDetails.jsx":"8"},{"size":500,"mtime":1608802395066,"results":"9","hashOfConfig":"10"},{"size":1452,"mtime":1609327755416,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608802395066,"results":"12","hashOfConfig":"10"},{"size":4131,"mtime":1609750388640,"results":"13","hashOfConfig":"10"},{"size":4565,"mtime":1609574329396,"results":"14","hashOfConfig":"10"},{"size":4991,"mtime":1609574351508,"results":"15","hashOfConfig":"10"},{"size":402,"mtime":1609307549751,"results":"16","hashOfConfig":"10"},{"size":1988,"mtime":1609404695781,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"12xx3py",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/index.js",[],["39","40"],"/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/App.js",["41"],"import React from \"react\"\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\"\n\n// Views\nimport Login from \"./views/authentication/Login\"\nimport Signup from \"./views/authentication/Signup\"\nimport PasswordReset from \"./views/authentication/PasswordReset\"\nimport Home from \"./views/Home\"\nimport PersonelDetails from './views/PersonelDetails'\n\n// Authenticated User Routes\n// import Home from \"./Home\"\n// import { getAuthInfo } from \"./shared/helpers\"\n// import AllReviews from \"./views/dashboard/detail_pages/AllReviews\"\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path=\"/signup/\"\n          exact\n          render={props => {\n            return <Signup {...props} />\n          }}\n        />\n        <Route\n          path=\"/login/\"\n          exact\n          render={props => {\n            return <Login {...props} />\n          }}\n        />\n\n<Route\n          path=\"/passwordReset/\"\n          exact\n          render={props => {\n            return <PasswordReset {...props} />\n          }}\n        />\n       \n       <Route\n          path=\"/home/\"\n          exact\n          render={props => {\n            return <Home {...props} />\n          }}\n        />\n\n\n       <Route\n          path=\"/personelDetails/\"\n          exact\n          render={props => {\n            return <PersonelDetails {...props} />\n          }}\n        />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App","/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/reportWebVitals.js",[],"/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/views/authentication/Signup.jsx",["42"],"/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/views/authentication/Login.jsx",["43"],"import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Styles from \"./css/Login.module.css\";\nimport axios from \"axios\";\n\nconst login = props => (\n  <Formik\n    initialValues={{ email: \"\", password: \"\" }}\n    onSubmit={(values, { setSubmitting }) => {\n      //   setTimeout(() => {\n      //     console.log(\"Logging in\", values);\n      //     setSubmitting(false);\n      //   }, 500);\n      console.log(\"values--\", values);\n      axios\n        .post(\"http://localhost:8000/api/auth/login/\", {\n          email: values.email,\n          password: values.password,\n          role: values.role\n        })\n        .then(response => {\n          console.log(\"login resp--\", response);\n          console.log(\"user_info \", response.data.details);\n          console.log(\"user active status\", response.data.details.active);\n          localStorage.setItem(\n            \"user_info\",\n            JSON.stringify(response.data.details)\n          );\n          console.log(JSON.parse(localStorage.getItem(\"user_info\")));\n\n          console.log(JSON.parse(localStorage.getItem(\"user_info\")).active);\n          props.history.push(\"/home\");\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }}\n    //********Handling validation messages yourself*******/\n    // validate={values => {\n    //   let errors = {};\n    //   if (!values.email) {\n    //     errors.email = \"Required\";\n    //   } else if (!EmailValidator.validate(values.email)) {\n    //     errors.email = \"Invalid email address\";\n    //   }\n\n    //   const passwordRegex = /(?=.*[0-9])/;\n    //   if (!values.password) {\n    //     errors.password = \"Required\";\n    //   } else if (values.password.length < 8) {\n    //     errors.password = \"Password must be 8 characters long.\";\n    //   } else if (!passwordRegex.test(values.password)) {\n    //     errors.password = \"Invalida password. Must contain one number\";\n    //   }\n\n    //   return errors;\n    // }}\n    //********Using Yum for validation********/\n\n    validationSchema={Yup.object().shape({\n      email: Yup.string()\n        .email()\n        .required(\"Required\"),\n      password: Yup.string()\n        .required(\"No password provided.\")\n        .min(8, \"Password is too short - should be 8 chars minimum.\"),\n      // .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n      role: Yup.string().required(\"role is required!\")\n    })}\n  >\n    {props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return (\n        <form onSubmit={handleSubmit}>\n          <h1>Login</h1>\n          <br></br>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"Enter your email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={errors.email && touched.email && Styles.error}\n          />\n          {errors.email && touched.email && (\n            <div className={Styles.inputFeedback}>{errors.email}</div>\n          )}\n          <label htmlFor=\"email\">Password</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={errors.password && touched.password && Styles.error}\n          />\n          {errors.password && touched.password && (\n            <div className={Styles.inputFeedback}>{errors.password}</div>\n          )}\n\n          <label htmlFor=\"email\" style={{ display: \"block\" }}>\n            Role\n          </label>\n          <select\n            name=\"role\"\n            value={values.role}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            style={{ display: \"block\" }}\n          >\n            <option value=\"\" label=\"Select a role\" />\n            <option value=\"operation\" label=\"operation\" />\n            <option value=\"partner\" label=\"parnter\" />\n            <option value=\"sales\" label=\"sales\" />\n          </select>\n          <br></br>\n          {errors.role && touched.role && (\n            <div className={Styles.inputFeedback}>{errors.role}</div>\n          )}\n\n          <button type=\"submit\" disabled={isSubmitting}>\n            Login\n          </button>\n        </form>\n      );\n    }}\n  </Formik>\n);\n\nexport default login;\n","/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/views/authentication/PasswordReset.jsx",["44"],"import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nimport Styles from \"./css/Login.module.css\";\nimport axios from \"axios\";\n// import { Router, Route, Link } from 'react-router-dom';\n// import Login from './Login'\n// import { hashHistory } from 'react-router;'\nimport { useHistory } from \"react-router-dom\";\n\nfunction PasswordReset(props) {\n  let history = useHistory();\n\n  const userActiveStatus = e => {\n    axios\n      .patch(\"http://localhost:8000/api/auth/user/changeStatus/\", {\n        user_id: JSON.parse(localStorage.getItem(\"user_info\")).id\n      })\n      .then(response => {\n        console.log(\"active statuse\", response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={{ password1: \"\", password2: \"\" }}\n      onSubmit={(values, { setSubmitting }) => {\n        //   setTimeout(() => {\n        //     console.log(\"Logging in\", values);\n        //     setSubmitting(false);\n        //   }, 500);\n        console.log(\"values--\", values);\n\n        if (values.password1 !== values.password2) {\n          alert(\"password not matches\");\n        } else {\n          axios\n            .patch(\"http://localhost:8000/api/auth/passwordReset/\", {\n              email: JSON.parse(localStorage.getItem(\"user_info\")).email, //will get replace with jwt token\n              password1: values.password1,\n              password2: values.password2\n            })\n            .then(response => {\n              console.log(\"password reset resp--\", response);\n              console.log(response.data.details[0].active);\n              if (response.data.details[0].active === false) {\n                console.log(\"when false\");\n                userActiveStatus();\n                history.push(\"/login\");\n              } else {\n                console.log(\"when true\");\n                history.push(\"/login\");\n              }\n            })\n            .catch(error => {\n              console.log(error);\n            });\n        }\n      }}\n      //********Handling validation messages yourself*******/\n      // validate={values => {\n      //   let errors = {};\n      //   if (!values.email) {\n      //     errors.email = \"Required\";\n      //   } else if (!EmailValidator.validate(values.email)) {\n      //     errors.email = \"Invalid email address\";\n      //   }\n\n      //   const passwordRegex = /(?=.*[0-9])/;\n      //   if (!values.password) {\n      //     errors.password = \"Required\";\n      //   } else if (values.password.length < 8) {\n      //     errors.password = \"Password must be 8 characters long.\";\n      //   } else if (!passwordRegex.test(values.password)) {\n      //     errors.password = \"Invalida password. Must contain one number\";\n      //   }\n\n      //   return errors;\n      // }}\n      //********Using Yum for validation********/\n\n      validationSchema={Yup.object().shape({\n        password1: Yup.string()\n          .required(\"No password provided.\")\n          .min(8, \"Password is too short - should be 8 chars minimum.\"),\n        // .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\n        password2: Yup.string()\n          .required(\"No password provided.\")\n          .min(8, \"Password is too short - should be 8 chars minimum.\")\n        // .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n      })}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        } = props;\n        return (\n          <form onSubmit={handleSubmit}>\n            <h1>Password Reset</h1>\n            <br></br>\n            <label htmlFor=\"email\">Password</label>\n            <input\n              name=\"password1\"\n              type=\"password\"\n              placeholder=\"Enter your new password\"\n              value={values.password1}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={errors.password && touched.password && Styles.error}\n            />\n            {errors.password1 && touched.password1 && (\n              <div className={Styles.inputFeedback}>{errors.password1}</div>\n            )}\n            <label htmlFor=\"email\">Confirm Password</label>\n            <input\n              name=\"password2\"\n              type=\"password\"\n              placeholder=\"Enter new password again\"\n              value={values.password2}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={errors.password2 && touched.password2 && Styles.error}\n            />\n            {errors.password2 && touched.password2 && (\n              <div className={Styles.inputFeedback}>{errors.password2}</div>\n            )}\n\n            <button type=\"submit\" disabled={isSubmitting}>\n              Reset\n            </button>\n          </form>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default PasswordReset;\n","/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/views/Home.jsx",["45"],"import React from 'react';\nimport PasswordReset from './authentication/PasswordReset'\nimport axios from 'axios'\nfunction Home(props) {\n\n    \n    return (\n        <div>\n            \n             {  \n                 JSON.parse(localStorage.getItem(\"user_info\")).active===false?(<PasswordReset></PasswordReset>):(<div>Hi home screen 11</div>)\n\n             }\n        </div>\n    );\n}\n\nexport default Home;","/home/rapi_00893/Desktop/pc_backup_rapimoney/NodeJsPractice/rapimoneyAdminFrontEnd/rapimoney/src/views/PersonelDetails.jsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":6,"column":3,"nodeType":"52","messageId":"53","endLine":6,"endColumn":11},{"ruleId":"50","severity":1,"message":"54","line":3,"column":13,"nodeType":"52","messageId":"53","endLine":3,"endColumn":27},{"ruleId":"50","severity":1,"message":"54","line":3,"column":13,"nodeType":"52","messageId":"53","endLine":3,"endColumn":27},{"ruleId":"50","severity":1,"message":"54","line":3,"column":13,"nodeType":"52","messageId":"53","endLine":3,"endColumn":27},{"ruleId":"50","severity":1,"message":"55","line":3,"column":8,"nodeType":"52","messageId":"53","endLine":3,"endColumn":13},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'EmailValidator' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]